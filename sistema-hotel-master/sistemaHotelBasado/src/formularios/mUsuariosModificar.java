/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formularios;

import java.awt.*;
import javax.swing.*;
//import gui.SQLConnection.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.and;
import sql.dbConnection;

/**
 *
 * @author jtx
 */

public class mUsuariosModificar extends javax.swing.JFrame {

    /**
     * Creates new form mUsuariosModificar
     */
    
    
    private Connection conn = null;

    public mUsuariosModificar() {
        initComponents();
        conn = dbConnection.connect();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        tf_nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        tf_contra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        chk_admin = new javax.swing.JCheckBox();
        btn_aplicar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        chk_new = new javax.swing.JRadioButton();
        fondo = new javax.swing.JButton();
        retornar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(tf_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 120, -1));

        jLabel2.setText("Nombre");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, -1, -1));

        tf_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_idActionPerformed(evt);
            }
        });
        tf_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_idKeyReleased(evt);
            }
        });
        jPanel1.add(tf_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 130, -1));
        jPanel1.add(tf_contra, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 130, -1));

        jLabel3.setText("Contraseña");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 60, -1));

        jLabel4.setText("Rol");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, -1, -1));

        chk_admin.setText("Admin");
        chk_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_adminActionPerformed(evt);
            }
        });
        jPanel1.add(chk_admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, 59, -1));

        btn_aplicar.setText("Aplicar");
        btn_aplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aplicarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_aplicar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 130, 30));

        jLabel5.setText("ID");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 20, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Modificar existente");
        jRadioButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 160, -1));

        buttonGroup1.add(chk_new);
        chk_new.setText("Crear Usuario");
        chk_new.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        chk_new.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chk_newStateChanged(evt);
            }
        });
        chk_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_newActionPerformed(evt);
            }
        });
        jPanel1.add(chk_new, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, -1));

        fondo.setBackground(new java.awt.Color(255, 204, 51));
        fondo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 10, 30));

        retornar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/formularios/devolver.png"))); // NOI18N
        retornar1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        retornar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retornar1ActionPerformed(evt);
            }
        });
        jPanel1.add(retornar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 30, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Añadir / Modificar");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 500, 290));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 600, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chk_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_adminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_adminActionPerformed

    private void btn_aplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aplicarActionPerformed
        boolean modoCrear = this.chk_new.isSelected();
        if (modoCrear) {
            if (comprobarUsuario(this.tf_nombre.getText())){
            añadirUsuario(conn);}else{
                JOptionPane.showMessageDialog(rootPane, "Usuario ya existente");
            }
        } else {
            if(this.tf_nombre.getText().equals("---") || this.tf_contra.getText().equals("---")){
                JOptionPane.showMessageDialog(rootPane, "El usuario no existe");
            }else{
                modificarUsuario(conn);
            }
        }

    }//GEN-LAST:event_btn_aplicarActionPerformed

    private void tf_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_idKeyReleased
        if (!this.chk_new.isSelected() && !this.jRadioButton1.isSelected()){
            this.jRadioButton1.setSelected(true);
        }
        
        
        String id = this.tf_id.getText();
        buscarID(conn, id);
    }//GEN-LAST:event_tf_idKeyReleased

    private void chk_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_newActionPerformed
        if (this.chk_new.isSelected()){
            try {
                this.tf_id.setText(String.valueOf(ultimoIdDisponible(conn)));
                this.tf_id.setEnabled(false);
                this.tf_nombre.setEnabled(true);
                this.tf_contra.setEnabled(true);
                this.chk_admin.setEnabled(true);
                this.btn_aplicar.setEnabled(true);
                
            } catch (SQLException ex) {
                Logger.getLogger(mUsuariosModificar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            String id = this.tf_id.getText();
            this.buscarID(conn, id);
        }
        
    }//GEN-LAST:event_chk_newActionPerformed

    private void chk_newStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chk_newStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_newStateChanged

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        this.tf_id.setEnabled(true);
        String id = this.tf_id.getText();
        if (!this.chk_new.isSelected()) {
            this.buscarID(conn, id);
        }else{
            this.tf_id.setText(String.valueOf(ultimoIdDisponible(conn)));
            this.tf_id.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void tf_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_idActionPerformed

    private void retornar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retornar1ActionPerformed
        cerrarModificar();
    }//GEN-LAST:event_retornar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mUsuariosModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mUsuariosModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mUsuariosModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mUsuariosModificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mUsuariosModificar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aplicar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chk_admin;
    private javax.swing.JRadioButton chk_new;
    private javax.swing.JButton fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton retornar1;
    private javax.swing.JTextField tf_contra;
    private javax.swing.JTextField tf_id;
    private javax.swing.JTextField tf_nombre;
    // End of variables declaration//GEN-END:variables

    private void buscarID(Connection con, String id) {

        String query = "SELECT nombre_usuario, contrasena, admin FROM Usuarios WHERE usuario_id = ?";

        try (PreparedStatement statement = conn.prepareStatement(query)) {
            statement.setString(1, id);
            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    String nombre = resultSet.getString("nombre_usuario");
                    String contraseña = resultSet.getString("contrasena");
                    
                    this.btn_aplicar.setEnabled(true);
                    //this.lbl_encontrado.setText("Usuario no encontrado");
                    this.tf_nombre.setEnabled(true);
                    this.tf_contra.setEnabled(true);
                    this.chk_admin.setEnabled(true);
                    
                    
                    boolean esAdmin = resultSet.getBoolean("admin");
                    this.tf_nombre.setText(nombre);
                    this.tf_contra.setText(contraseña);
                    this.chk_admin.setSelected(esAdmin);
                    //this.lbl_encontrado.setText("Usuario existente, aplicar para modificar");
                    
                } else {
                    this.btn_aplicar.setEnabled(false);
                    //this.lbl_encontrado.setText("Usuario no encontrado");
                    this.tf_nombre.setEnabled(false);
                    this.tf_contra.setEnabled(false);
                    this.chk_admin.setEnabled(false);
                    
                    this.tf_nombre.setText("");
                    this.tf_contra.setText("");
                    this.chk_admin.setSelected(false);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void cerrarModificar() {
        this.setVisible(false);
    }

    private int ultimoIdDisponible(Connection conn) throws SQLException {
        String ultimoIDQuery = "SELECT MAX(usuario_id) AS ultimo_id FROM Usuarios";
        int nuevoID = 1; // Valor por defecto para el primer usuario
       
        PreparedStatement ultimoIDStmt = conn.prepareStatement(ultimoIDQuery);
        ResultSet rs = ultimoIDStmt.executeQuery();
        if (rs.next()) {
            nuevoID = rs.getInt("ultimo_id") + 1;
        }
        return nuevoID;
    }

    private void añadirUsuario(Connection conn) {

        String insertQuery = "INSERT INTO Usuarios (usuario_id, nombre_usuario, contrasena, admin, creado_en, actualizado_en) VALUES (?, ?, ?, ?,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)";

        try {
            // Obtener el último ID

            // Obtener los valores para el nuevo usuario
            String nombre = this.tf_nombre.getText();
            String contraseña = this.tf_contra.getText();
            boolean esAdmin = this.chk_admin.isSelected();

            // Insertar el nuevo usuario
            int nuevoID = ultimoIdDisponible(conn);
            
            PreparedStatement insertStmt = conn.prepareStatement(insertQuery);
            insertStmt.setInt(1, nuevoID);
            insertStmt.setString(2, nombre);
            insertStmt.setString(3, contraseña);
            insertStmt.setBoolean(4, esAdmin);

            int filasInsertadas = insertStmt.executeUpdate();
            if (filasInsertadas > 0) {
                JOptionPane.showMessageDialog(rootPane, "Usuario añadido exitosamente");
            }
            this.chk_new.setSelected(false);
            this.chk_admin.setSelected(false);
            this.tf_contra.setText("");
            this.tf_nombre.setText("");
            this.tf_id.setText("");
            insertStmt.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void modificarUsuario(Connection conn) {
        String insertQuery = "UPDATE Usuarios SET nombre_usuario = ?, contrasena = ?, admin = ?, actualizado_en = CURRENT_TIMESTAMP where usuario_id = ?";

        try {
            // Obtener el último ID

            // Obtener los valores para el nuevo usuario
            String nombre = this.tf_nombre.getText();
            String contraseña = this.tf_contra.getText();
            boolean esAdmin = this.chk_admin.isSelected();

            // Insertar el nuevo usuario
            String ID = this.tf_id.getText();
            
            PreparedStatement insertStmt = conn.prepareStatement(insertQuery);
            insertStmt.setString(1, nombre);
            insertStmt.setString(2, contraseña);
            insertStmt.setBoolean(3, esAdmin);
            insertStmt.setString(4, ID);

            int filasInsertadas = insertStmt.executeUpdate();
            if (filasInsertadas > 0) {
                JOptionPane.showMessageDialog(rootPane, "Usuario actualizado correctamente");
            }
            this.chk_new.setSelected(false);
            this.chk_admin.setSelected(false);
            this.tf_contra.setText("");
            this.tf_nombre.setText("");
            this.tf_id.setText("");
            insertStmt.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private boolean comprobarUsuario(String usuario) {
        String consultaSQL = "SELECT COUNT(*) FROM Usuarios WHERE nombre_usuario = ?";
        try (PreparedStatement preparedStatement = conn.prepareStatement(consultaSQL)) {
            preparedStatement.setString(1, usuario);
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                int count = resultSet.getInt(1);
                return count == 0;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return true;
    }
}
}
